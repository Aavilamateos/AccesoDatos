package ceu.dam.ad.ejerciciosTema2.ejercicio6.enunciado.clients;


import java.util.Arrays;
import java.util.List;

import org.springframework.http.client.HttpComponentsClientHttpRequestFactory;
import org.springframework.web.client.RestTemplate;


import ceu.dam.ad.ejerciciosTema2.ejercicio6.enunciado.modelo.Ciudad;

public class CiudadesClientImpl implements CiudadesClient{

	private String urlBase;
	private RestTemplate restTemplate;
	
	public CiudadesClientImpl(String urlBase, Integer msTimeout) {
		this.urlBase=urlBase;
		HttpComponentsClientHttpRequestFactory requestFactory = new HttpComponentsClientHttpRequestFactory();
		requestFactory.setConnectionRequestTimeout(msTimeout);
		this.restTemplate = new RestTemplate(requestFactory);
	}

	@Override
	public List<Ciudad> getCities(String filtroDescripcion) throws CiudadNoEncontradaException, CiudadErrorException {
		String url= urlBase + "/city?filtroDescripcion="+filtroDescripcion;
		Ciudad [] listaCiudades=restTemplate.getForObject(url, Ciudad[].class);
		return Arrays.asList(listaCiudades);
	}

	@Override
	public Ciudad getCity(Long id) throws CiudadNoEncontradaException, CiudadErrorException {
		String url= urlBase + "/city?city_id="+id;
		Ciudad ciudad=restTemplate.getForObject(url, Ciudad.class);
		return ciudad;
	}

	@Override
	public Ciudad createCity(Ciudad city) throws CiudadErrorException {
		return null;
	}

	@Override
	public void updateCity(Ciudad city) throws CiudadNoEncontradaException, CiudadErrorException {
	}

	@Override
	public Ciudad updateSelectiveCity(Ciudad city) throws CiudadNoEncontradaException, CiudadErrorException {
		return null;
	}

	@Override
	public void deleteCity(Long id) throws CiudadNoEncontradaException, CiudadErrorException {
	}


}
